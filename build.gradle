plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5' // 현재 사용 버전
	id 'io.spring.dependency-management' version '1.1.4' // 현재 사용 버전
}

group = 'com.valanse'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17) // 현재 사용 Java 버전
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot 설정
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Swagger 설정
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// Jackson 설정
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// QueryDSL 설정
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	// 버전 명시 제거: Spring Boot의 dependency-management가 관리하도록 둡니다.
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	// Lombok 설정
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// JWT 설정
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly('io.jsonwebtoken:jjwt-jackson:0.11.5')

	// MySQL 설정
	implementation 'com.mysql:mysql-connector-j:8.0.33'

	// Spring Test 설정
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// QueryDSL 설정 (Q 클래스 생성 디렉토리)
def generatedDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

// 생성된 Q 클래스 디렉토리를 소스 경로에 추가
sourceSets {
	main {
		java {
			srcDirs += generatedDir
		}
	}
}

// 컴파일 시 Annotation Processor가 Q 클래스를 지정된 디렉토리에 생성하도록 설정
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory.set(file(generatedDir))
	// 여기 아래에 -parameters 플래그를 추가합니다.
	options.compilerArgs << "-parameters"
}

// build/generated/querydsl 디렉토리를 깨끗하게 삭제하는 clean 태스크 추가
clean {
	delete file(generatedDir)
}

//// 테스트 환경에서 JUnit 5 사용 설정
//test {
//	useJUnitPlatform()
//}
//plugins {
//	id 'java'
//	id 'org.springframework.boot' version '3.2.5'
//	id 'io.spring.dependency-management' version '1.1.4'
//}
//
//group = 'com.valanse'
//version = '0.0.1-SNAPSHOT'
//
//java {
//	toolchain {
//		languageVersion = JavaLanguageVersion.of(17)
//	}
//}
//
//repositories {
//	mavenCentral()
//}
//
//dependencies {
//	// Spring Boot 설정
//	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//
//	// Swagger 설정
//	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
//
//	// Jackson 설정
//	implementation 'com.fasterxml.jackson.core:jackson-databind'
//
//	// QueryDSL 설정
//	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
//	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
//	annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'
//
//	// Lombok 설정
//	compileOnly 'org.projectlombok:lombok'
//	annotationProcessor 'org.projectlombok:lombok'
//
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//
//	// JWT 설정
//	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
//	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
//	runtimeOnly('io.jsonwebtoken:jjwt-jackson:0.11.5')
//
//	// MySQL 설정
//	implementation 'com.mysql:mysql-connector-j:8.0.33'
//
//	// Spring Test 설정
//	testImplementation 'org.springframework.security:spring-security-test'
//	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
//}
//
//// QueryDSL 설정
//def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile
//
//sourceSets {
//	main.java.srcDirs += querydslDir
//}
